{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "organisation": {
      "type": "string",
      "metadata": {
        "description": "The organisation that the resource group or resource is owned by. Descriptive, used for metadata."
      },
      "allowedValues": [
        "Team KDA"
      ],
      "defaultValue": "Team KDA"
    },
    "organisationCode": {
      "type": "string",
      "metadata": {
        "description": "The organisation that the resource group or resource is owned by. Short, used for resource naming."
      },
      "allowedValues": [
        "kda"
      ],
      "defaultValue": "kda"
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Whether this resource is Dev/Test/Prod/etc."
      },
      "allowedValues": [
        "LOCAL",
        "DEVELOPMENT",
        "TEST",
        "PRODUCTION",
        "ALL"
      ],
      "defaultValue": "DEVELOPMENT"
    },
    "environmentCode": {
      "type": "string",
      "metadata": {
        "description": "Whether this resource is Dev/Test/Prod/etc."
      },
      "allowedValues": [
        "lcl",
        "dev",
        "tst",
        "prd",
        "all"
      ],
      "defaultValue": "dev"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region where Application Insights instance is hosted."
      },
      "allowedValues": [
        "australiasoutheast",
        "australiaeast",
        "southcentralus",
        "[resourceGroup().location]"
      ],
      "defaultValue": "[resourceGroup().location]"
    },
    "locationCode": {
      "type": "string",
      "metadata": {
        "description": "The Azure region that the resource is deployed to."
      },
      "allowedValues": [
        "ase",
        "aue",
        "usc"
      ],
      "defaultValue": "ase"
    },
    "resourceTypeSuffix": {
      "type": "string",
      "metadata": {
        "description": "The suffix of resource type to identify multiple resources in case same resource type exists. eg) 01, 02, etc..."
      },
      "defaultValue": ""
    },
    "operation": {
      "type": "string",
      "metadata": {
        "description": "The name of operation that the function app performs. eg) common, sales, etc..."
      },
      "defaultValue": ""
    },

    "projectName": {
      "type": "string",
      "metadata": {
        "description": "The name of the project the resource group or resource was provisioned for."
      },
      "defaultValue": "NOT_SET"
    },

    "storageAccountSkuName": {
      "type": "string",
      "metadata": {
        "description": "SKU Name for the Storage Account"
      },
      "defaultValue": "Standard_LRS"
    },
    "storageAccountSkuTier": {
      "type": "string",
      "metadata": {
        "description": "SKU Tier for the Storage Account"
      },
      "defaultValue": "Standard"
    }
  },
  "variables": {
    "resourceNameLongTemplate": "[toLower(concat('{0}', '-', parameters('organisationCode'), '-', parameters('environmentCode'), '-', parameters('locationCode')))]",
    "resourceNameShortTemplate": "[replace(variables('resourceNameLongTemplate'), '-', '')]",
    "storageAccount": {
      "name": "[replace(variables('resourceNameShortTemplate'), '{0}', concat('st', parameters('resourceTypeSuffix')))]",
      "apiVersion": "[providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountSkuName')]",
        "tier": "[parameters('storageAccountSkuTier')]"
      }
    },
    "tags": {
      "organisation": "[parameters('organisation')]",
      "environment": "[parameters('environment')]",
      "projectName": "[parameters('projectName')]"
    }
  },
  "resources": [
    {
      "comments": " = = = Storage Account = = = ",
      "apiVersion": "[variables('storageAccount').apiVersion]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccount').name]",
      "location": "[variables('storageAccount').location]",
      "tags": "[variables('tags')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[variables('storageAccount').sku.name]",
        "tier": "[variables('storageAccount').sku.tier]"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccount').name]"
    },
    "storageAccountKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount').name), variables('storageAccount').apiVersion).keys[0].value]"
    },
    "storageAccountEndpoint": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccount').name, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount').name), variables('storageAccount').apiVersion).keys[0].value, ';EndpointSuffix=core.windows.net')]"
    }
  }
}