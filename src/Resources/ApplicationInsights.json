{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "organisation": {
      "type": "string",
      "metadata": {
        "description": "The organisation that the resource group or resource is owned by. Descriptive, used for metadata."
      },
      "allowedValues": [
        "Team KDA"
      ],
      "defaultValue": "Team KDA"
    },
    "organisationCode": {
      "type": "string",
      "metadata": {
        "description": "The organisation that the resource group or resource is owned by. Short, used for resource naming."
      },
      "allowedValues": [
        "kda"
      ],
      "defaultValue": "kda"
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "Whether this resource is Dev/Test/Prod/etc."
      },
      "allowedValues": [
        "LOCAL",
        "DEVELOPMENT",
        "TEST",
        "PRODUCTION",
        "ALL"
      ],
      "defaultValue": "DEVELOPMENT"
    },
    "environmentCode": {
      "type": "string",
      "metadata": {
        "description": "Whether this resource is Dev/Test/Prod/etc."
      },
      "allowedValues": [
        "lcl",
        "dev",
        "tst",
        "prd",
        "all"
      ],
      "defaultValue": "dev"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region where Application Insights instance is hosted."
      },
      "allowedValues": [
        "southcentralus"
      ],
      "defaultValue": "southcentralus"
    },
    "locationCode": {
      "type": "string",
      "metadata": {
        "description": "The Azure region that the resource is deployed to."
      },
      "allowedValues": [
        "ase",
        "aue",
        "usc"
      ],
      "defaultValue": "ase"
    },
    "resourceTypeSuffix": {
      "type": "string",
      "metadata": {
        "description": "The suffix of resource type to identify multiple resources in case same resource type exists. eg) 01, 02, etc..."
      },
      "defaultValue": ""
    },
    "operation": {
      "type": "string",
      "metadata": {
        "description": "The name of operation that the function app performs. eg) common, sales, etc..."
      },
      "defaultValue": ""
    },

    "projectName": {
      "type": "string",
      "metadata": {
        "description": "The name of the project the resource group or resource was provisioned for."
      },
      "defaultValue": "NOT_SET"
    },

    "appInsightsKind": {
      "type": "string",
      "metadata": {
        "description": "The type of Application Insights instance."
      },
      "allowedValues": [
        "other",
        "web"
      ],
      "defaultValue": "web"
    }
  },
  "variables": {
    "resourceNameLongTemplate": "[toLower(concat('{0}', '-', parameters('organisationCode'), '-', parameters('environmentCode'), '-', parameters('locationCode'), '-', '{1}'))]",
    "resourceNameShortTemplate": "[replace(variables('resourceNameLongTemplate'), '-', '')]",
    "appInsights": {
      "name": "[replace(replace(variables('resourceNameLongTemplate'), '{0}', concat('appins', parameters('resourceTypeSuffix'))), '{1}', parameters('operation'))]",
      "apiVersion": "[providers('Microsoft.Insights', 'components').apiVersions[0]]",
      "location": "[parameters('location')]",
      "kind": "[parameters('appInsightsKind')]"
    },
    "tags": {
      "organisation": "[parameters('organisation')]",
      "environment": "[parameters('environment')]",
      "projectName": "[parameters('projectName')]"
    }
  },
  "resources": [
    {
      "comments": " = = = Application Insights = = = ",
      "apiVersion": "[variables('appInsights').apiVersion]",
      "type": "Microsoft.Insights/components",
      "name": "[variables('appInsights').name]",
      "location": "[variables('appInsights').location]",
      "tags": "[variables('tags')]",
      "kind": "[variables('appInsights').kind]",
      "properties": {
        "applicationId": "[variables('appInsights').name]"
      }
    }
  ],
  "outputs": {
    "applicationInsightsName": {
      "type": "string",
      "value": "[variables('appInsights').name]"
    },
    "instrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsights').name)).instrumentationKey]"
    }
  }
}